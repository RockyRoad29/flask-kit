"""empty message

Revision ID: 9e4bd2fd93a
Revises: 437c691a0fe2
Create Date: 2014-07-14 19:34:39.974449

"""

# revision identifiers, used by Alembic.
revision = '9e4bd2fd93a'
down_revision = '437c691a0fe2'

from alembic import op
import sqlalchemy as sa


def upgrade():
    ### commands auto generated by Alembic - please adjust! ###

    op.drop_table('email')
    op.create_table('emails',
    sa.Column('contact_id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=80), nullable=False),
    sa.Column('status', sa.Enum('active', 'suspended', 'error'), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['contact_id'], ['contact.id'], ),
    sa.PrimaryKeyConstraint('contact_id', 'email')
    )

    op.create_table('phones',
    sa.Column('contact_id', sa.Integer(), nullable=False),
    sa.Column('num', sa.String(length=25), nullable=False),
    sa.Column('type', sa.Enum('landline', 'mobile'), nullable=True),
    sa.Column('work', sa.Boolean(), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['contact_id'], ['contact.id'], ),
    sa.PrimaryKeyConstraint('contact_id', 'num')
    )

    op.create_table('addresses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('address', sa.Text(), nullable=True),
    sa.Column('postcode', sa.String(length=5), nullable=True),
    sa.Column('town', sa.String(length=80), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('address', 'postcode', 'town')
    )

    # FIXME workaround for sqlite ... to drop when using pgsql
    if False: # drop column not supported by sqlite
        op.add_column(u'contact', sa.Column('address_id', sa.Integer(), nullable=True))
        op.drop_column(u'contact', 'phone')
        op.drop_column(u'contact', 'address')
    else:
        # generated with::
        #     rm -f dev.db drafts-migrations/versions/*
        #     ./manage.py schema migrate -d drafts-migrations
        op.drop_table(u'contact')
        op.create_table('contact',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('first_name', sa.String(length=80), nullable=True),
        sa.Column('last_name', sa.String(length=80), nullable=False),
        sa.Column('address_id', sa.Integer(), nullable=True),
        sa.Column('date_of_birth', sa.Date(), nullable=True),
        sa.Column('notes', sa.Text(), nullable=True),
        sa.ForeignKeyConstraint(['address_id'], ['addresses.id'], ),
        sa.PrimaryKeyConstraint('id')
        )

    ### end Alembic commands ###


def downgrade():
    """
    .. note:
        This will fail with sqlite backend.
        The easiest is to drop db and then upgrade to desired revision.

    :return:
    """
    ### commands auto generated by Alembic - please adjust! ###
    op.add_column(u'contact', sa.Column('address', sa.TEXT(), nullable=True))
    op.add_column(u'contact', sa.Column('phone', sa.TEXT(), nullable=True))
    op.drop_column(u'contact', 'address_id')
    op.create_table('email',
    sa.Column('email', sa.VARCHAR(length=80), nullable=False),
    sa.Column('contact_id', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['contact_id'], [u'contact.id'], ),
    sa.PrimaryKeyConstraint('email')
    )
    op.drop_table('emails')
    op.drop_table('phones')
    op.drop_table('addresses')
    ### end Alembic commands ###
